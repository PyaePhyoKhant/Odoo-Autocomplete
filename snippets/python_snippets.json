{
	"Domain": {
		"prefix": "odomain",
		"body": [
			"('$1', '$2', $0)"
		],
		"description": "Add domain"
	},
	"Env Search": {
		"prefix": "osearch",
		"body": [
			"self.env['$1'].search([$0])"
		],
		"description": "Env search"
	},
	"Env Browse": {
		"prefix": "obrowse",
		"body": [
			"self.env['$1'].browse([$0])"
		],
		"description": "Env browse"
	},
	"Model Inherit": {
		"prefix": "omodeli",
		"body": [
			"from odoo import api, fields, models",
			"",
			"",
			"class $1(models.Model):",
			"\t_inherit = '$2'",
			"",
			"\t$0"
		],
		"description": "Inherit model"
	},
	"Create New Model": {
		"prefix": "omodel",
		"body": [
			"from odoo import api, fields, models",
			"",
			"",
			"class $1(models.Model):",
			"\t_name = '$2'",
			"",
			"\t$0"
		],
		"description": "Create new model"
	},
	"Create Method": {
		"prefix": "ocreate",
		"body": [
			"@api.model",
			"def create(self, vals):",
			"\tres = super().create(vals)",
			"\t$0",
			"\treturn res"
		],
		"description": "Create method"
	},
	"Write Method": {
		"prefix": "owrite",
		"body": [
			"def write(self, vals):",
			"\tres = super().write(vals)",
			"\t$0",
			"\treturn res"
		],
		"description": "Write method"
	},
	"Char Field": {
		"prefix": "ofchar",
		"body": [
			"$1 = fields.Char($0)"
		],
		"description": "Add char field"
	},
	"Boolean Field": {
		"prefix": "ofbool",
		"body": [
			"$1 = fields.Boolean($0)"
		],
		"description": "Add boolean field"
	},
	"Integer Field": {
		"prefix": "ofint",
		"body": [
			"$1 = fields.Integer($0)"
		],
		"description": "Add integer field"
	},
	"Float Field": {
		"prefix": "offloat",
		"body": [
			"$1 = fields.Float($0)"
		],
		"description": "Add float field"
	},
	"Text Field": {
		"prefix": "oftext",
		"body": [
			"$1 = fields.Text($0)"
		],
		"description": "Add text field"
	},
	"Selection Field": {
		"prefix": "ofsel",
		"body": [
			"$1 = fields.Selection($0)"
		],
		"description": "Add selection field"
	},
	"Html Field": {
		"prefix": "ofhtml",
		"body": [
			"$1 = fields.Html($0)"
		],
		"description": "Add html field"
	},
	"Date Field": {
		"prefix": "ofdate",
		"body": [
			"$1 = fields.Date($0)"
		],
		"description": "Add date field"
	},
	"Datetime Field": {
		"prefix": "ofdatetime",
		"body": [
			"$1 = fields.Datetime($0)"
		],
		"description": "Add datetime field"
	},
	"Many2one Field": {
		"prefix": "ofm2o",
		"body": [
			"$1 = fields.Many2one('$0')"
		],
		"description": "Add many2one field"
	},
	"One2many Field": {
		"prefix": "ofo2m",
		"body": [
			"$1 = fields.One2many('$0')"
		],
		"description": "Add one2many field"
	},
	"Many2many Field": {
		"prefix": "ofm2m",
		"body": [
			"$1 = fields.Many2many('$0')"
		],
		"description": "Add many2many field"
	},
	"Reference Field": {
		"prefix": "ofref",
		"body": [
			"$1 = fields.Reference($0)"
		],
		"description": "Add reference field"
	},
	"API method": {
		"prefix": "oroute",
		"body": [
			"@http.route('/$1', type='json', auth='${2:user}')",
			"def $3(self, **kw):",
			"\t$0",
			"\treturn {}"
		],
		"description": "Add api route method"
	}
}